commands:

  make: !Command
    description: Build tools
    container: ubuntu
    run: [cargo, build]

  make-static: !Command
    description: Build static executable
    container: ubuntu
    run: [cargo, build, --target=x86_64-unknown-linux-musl]

  cargo: !Command
    description: Run arbitrary cargo command
    symlink-name: cargo
    container: ubuntu
    run: [cargo]

  cargo-expand: !Command
    description: Print macro-expanded form for the crate
    container: nightly
    run: [cargo, rustc, "--", -Zunstable-options, --pretty=expanded]

  test-rust: !Command
    description: Run normal rust tests
    container: ubuntu
    run: [cargo, test]

  test-musl: !Command
    description: Run musl (docker) tests
    container: ubuntu
    run: [cargo, test, --target=x86_64-unknown-linux-musl]
    environ:
      DOCKER_HOST: unix:///var/docker.sock
    volumes:
      /tmp: !Tmpfs
        size: 1Gi
      /var/docker.sock: !BindRW /volumes/docker.sock

  test: !Command
    description: Run all the tests
    container: ubuntu
    prerequisites: [test-rust, test-musl]
    run: [echo, Ok]


  repl: !Command
    description: Run edgedb repl
    container: ubuntu
    run: [cargo, run, --bin, edgedb, --features=dev_mode, '--']

  server: !Command
    description: Run edgedb server command
    container: ubuntu
    write-mode: transient-hard-link-copy
    run: [cargo, run, --bin, edgedb, '--', server]

  ubuntu-bash: !Command
    description: Run edgedb server command
    container: ubuntu
    write-mode: transient-hard-link-copy
    run: [bash]

  tree: !Command
    description: Run tree tool
    container: tools
    run: [cargo, tree]

  outdated: !Command
    description: Run outdated tool
    container: tools
    run: [cargo, outdated]

  fuzz: !Command
    description: Run fuzz tool
    container: tools
    run: [cargo, fuzz]

  bloat: !Command
    description: Run cargo bloat tool
    container: tools
    run: [cargo, bloat]


containers:

  ubuntu:
    setup:
    - !Ubuntu bionic
    - !UbuntuUniverse
    - !Install
      - ca-certificates
      - git
      - build-essential
      - vim
      - less  # as pager for repl
      - musl-tools
      - zlib1g-dev
      # for cargo geiger
      - libssl-dev
      - pkg-config
      # for \psql
      - postgresql-client
      # for tests
      - docker.io

    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-1.43.1-x86_64-unknown-linux-gnu.tar.gz"
      script: "./install.sh --prefix=/usr \
                --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"
    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-std-1.43.1-x86_64-unknown-linux-musl.tar.gz"
      script: "./install.sh --prefix=/musl \
               --components=rust-std-x86_64-unknown-linux-musl"
    - !Env RUSTFLAGS: -g
    - !Sh 'ln -s /musl/lib/rustlib/x86_64-unknown-linux-musl /usr/lib/rustlib/x86_64-unknown-linux-musl'

    # edgedb itself for tests
    - !Sh |
        addgroup --system --gid 200 postgres
        adduser --uid 200 --system --home /data --no-create-home \
            --shell /bin/bash --group --gecos "PostgreSQL administrator" \
            postgres
    - !UbuntuRepo
      url: https://packages.edgedb.com/apt
      suite: bionic.nightly
      components: [main]
      trusted: true
    - !Install [edgedb-1-alpha3]
    - !Text
      /var/docker.sock: ""

    volumes:
      /tmp: !Tmpfs
        size: 1G
    environ: &environ
      HOME: /work/target
      RUST_BACKTRACE: 1
      # needed for musl build
      PATH: /musl/bin:/usr/local/bin:/usr/bin:/bin
      LD_LIBRARY_PATH: /musl/lib/rustlib/x86_64-unknown-linux-musl/lib
      EDGEDB_HOST: '/work/tmp/run'

  tools:
    setup:
    - !Container ubuntu
    - !Sh 'cargo install cargo-tree cargo-fuzz cargo-outdated cargo-bloat --root=/usr'
    environ: *environ
